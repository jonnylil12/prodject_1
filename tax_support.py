#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 5.6
#  in conjunction with Tcl version 8.6
#    Nov 09, 2020 06:45:32 PM EST  platform: Windows NT
#    Nov 09, 2020 06:52:35 PM EST  platform: Windows NT

import sys
from tkinter.messagebox import showinfo,showerror
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global income_var
    income_var = tk.StringVar()
    global filling_var
    filling_var = tk.StringVar()


def keypress(event):
    if ord(event.char) ==13:
        tax()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top
    w.TCombobox1['values'] =  ( 'Single',
                      'Married Filing Jointly' ,
                      'Married Filing Separately',
                      'Head of household'
                    )
    w.TCombobox1.set('Single')
    root.bind('<Key>',keypress)
    

def Single(filling ,income):

    if 0 < income < 9876:
        return income * 0.10

    elif 9875 < income < 40126:
        return income * 0.12 + 988

    elif 40125 < income < 85526:
        return income * 0.22 + 4618

    elif 85525 <  income < 163301:
        return income * 0.24 + 14606

    elif 163300 <  income <  207351:
        return income * 0.32 + 33272

    elif 207350 <  income < 518401:
        return income * 0.35 + 47368

    else:
        return income * 0.37 + 156235



def Married_Filing_Jointly(filling,income):
    if 0 < income < 19751:
        return income * 0.10

    elif 19750 < income < 80251:
        return income * 0.12 + 1975

    elif 80250 < income < 171051:
        return income * 0.22 + 9235

    elif 171050 < income < 326601:
        return income * 0.24 + 29211

    elif 326600 < income < 414701:
        return income * 0.32 + 66543

    elif 414700 < income < 622051:
        return income * 0.35 + 94735

    else:
        return income * 0.37 + 167308


def Married_Filing_Separately(filling, income):
    if 0 < income < 9876:
        return income * 0.10

    elif 9875 < income < 40127:
        return income * 0.12 + 988

    elif 40126 < income < 85526:
        return income * 0.22 + 4618

    elif 85525 < income < 163301:
        return income * 0.24 + 14605

    elif 163300 < income < 207351:
        return income * 0.32 + 33271

    elif 207350 < income < 311026:
        return income * 0.35 + 47367

    else:
        return income * 0.37 + 83654


def Head_of_household(filling, income):
    if 0 < income < 14101:
        return income * 0.10

    elif 14100 < income < 53701:
        return income * 0.12 + 1410

    elif 53700 < income < 85501:
        return income * 0.22 + 6162

    elif 85525 < income < 163301:
        return income * 0.24 + 13158

    elif 163300 < income < 207351:
        return income * 0.32 + 31830

    elif 207350 < income < 518401:
        return income * 0.35 + 45926

    else:
        return income * 0.37 + 153794

def tax():
    global income_var
    global filling_var
    income = income_var.get()
    filling = filling_var.get()

    try:
        income = float(income)
        assert income >= 0
    except Exception:
        showerror('Taxes','Invalid entry')
    else:
        if income == 0:
            showinfo('Taxes','You owe no taxes')
        elif filling == 'Single':
            tax = Single(filling,income)
            showinfo('Taxes',f'\nYou owe ${format(tax,",.2f")} in taxes')
        
        elif filling == 'Married Filing Jointly':
            tax = Married_Filing_Jointly(filling,income)
            showinfo('Taxes',f'\nYou owe ${format(tax,",.2f")} in taxes')
        
        elif filling == 'Married Filing Separately':
            tax = Married_Filing_Separately(filling,income)
            showinfo('Taxes',f'\nYou owe ${format(tax,",.2f")} in taxes')
        
        elif filling == 'Head of household':
            tax = Head_of_household(filling,income)
            showinfo('Taxes',f'\nYou owe ${format(tax,",.2f")} in taxes')
        
    
    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import tax
    tax.vp_start_gui()





